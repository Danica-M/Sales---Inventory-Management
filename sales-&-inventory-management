#Project in Fundamental of Software Development

#Belle Online Jewellery Shop sell variety of jewellery and fashion accessories
#Such as earring, necklace, bracelet, hair clip, etc.

#This is Belle's Shop & Stock Management


products = {
    1001: {"type": "Stud Earring", "price": 4.99, "material": "Pearl", "quantity": 25},
    1002: {"type": "Necklace", "price": 20.00, "material": "Rhodium", "quantity": 20},
    1003: {"type": "Nose ring", "price": 14.99, "material": "Silver", "quantity": 20},
    1004: {"type": "Ear Cuff", "price": 17.99, "material": "Gold", "quantity": 30},
    1005: {"type": "Bracelet", "price": 39.99, "material": "Jade", "quantity": 25},
}


#Function for Adding  Product to the current list of product 
def add_product(code):
    while True:
    #im using (while true and break) in this program as i find it comfortable to use
    #unlike the normal while loop, i dont need to initialize my variable 
    
        types= input("Enter Jewellery Type:      ")
        price= float(input("Enter Jewellery Price:     "))
        material= input("Enter Jewellery Material:  ")
       
        while True:
            quantity= int(input("Enter Jewellery Quantity:  "))
            if quantity <= 9 or quantity >= 51:
                print("Please Enter quantity between 10 and 50")
            else:
                break
             

        products[code] = {"type": types, "price": price, "material": material, "quantity": quantity}
        
        repeat_option=input("Do you want to enter another product? Yes or No: ")
        if repeat_option.lower() !="yes":
            break
        #this will break the first while loop otherwise it will continue asking for another product
        
#Function for checking if the product exist by code input and result will return boolean value          
def check_product():
    while True:
        code= int(input("Enter Jewellery Code:      "))
        if code in products:
            return code
            break
        else:
            print("Code not found! Please Try again")
        
    
#Function for searching for Product using product code input and result will show product details       
def search_product(code):
    product = products[code]
    print("__________________________________________________________________________")
    print("{0}\t\t{1}\t\t{2}\t\t{3}\t{4}".format("CODE", "TYPE", "PRICE", "MATERIAL", "QUANTITY"))
    print("__________________________________________________________________________")
    print("{0}\t\t{1}\t{2}\t\t{3}\t\t{4}".format(code, product["type"], "{:.2f}".format(product["price"]), product["material"], product["quantity"]))
    print("\n")
    
    
                      
    
#Function for updating Product details using search_product() function
def update_product(code):
    search_product(code)
    if input("Do you want to update Jewellery Type? (yes or no): ").lower() == "yes":
        products[code]["type"] = input("Enter new Jewellery Type: ")

    if input("Do you want to update Jewellery Price? (yes or no): ").lower() == "yes":
        products[code]["price"] = float(input("Enter new Jewellery Price: "))

    if input("Do you want to update Jewellery Material? (yes or no): ").lower() == "yes":
        products[code]["material"] = input("Enter new Jewellery Material: ")

    if input("Do you want to update Jewellery Quantity? (yes or no): ").lower() == "yes":
        while True:
            quantity = int(input("Enter new Jewellery Quantity (10-50): "))
            if 10 <= quantity <= 50:
                products[code]["quantity"] = quantity
                break
            else:
                print("Please enter a quantity between 10 and 50")

    print("\nUpdated information for:", code)
    search_product(code)


#function that allows customer to buy product from the shop, it will show subtotal, 15% tax, cummulated discount and total price to pay.    
def buy_product():
    cart = []  # List to store items added to the cart
    cart_total = 0  # Variable to keep track of the total cost of items in the cart
    cart_quantity = 0  # Variable to keep track of the total quantity of items in the cart

    # shows the stocklist for customer reference
    stocklist()
    
    while True:
        # Check if the product exists and get its code
        code = check_product()
        product = products[code]

        # Check if the product is sold out
        if product["quantity"] == 0:
            print(product["type"], "is sold out!")
            continue  # Continue to the next iteration to ask for another product code

        while True:
            # Ask the user for the quantity they want to buy
            itemQ = int(input("Enter Product Quantity: "))
            if itemQ > product["quantity"]:
                print(f"Sorry, we only have {product['quantity']} of {product['type']} available.")
                # Ask if they want to enter a new quantity
                if input("Do you want to enter a new quantity? (yes or no): ").lower() != "yes":
                    break  # Break the inner loop to ask for a new product code
            else:
                # Add the product to the cart
                cart.append({"code": code, "type": product["type"], "price": product["price"], "quantity": itemQ})
                product["quantity"] -= itemQ  # Update the product quantity in stock
                cart_total += itemQ * product["price"]  # Update the cart total
                cart_quantity += itemQ  # Update the total quantity in the cart
                print("==========================================================")
                print("Your Subtotal is: $", "{:.2f}".format(cart_total))
                break  # Break the inner loop to ask if they want to buy another product

        # Ask if the user wants to buy another product
        if input("Do you want to buy another product? (yes or no): ").lower() != "yes":
            break  # Break the outer loop to proceed to the checkout

    # If there are items in the cart, proceed to calculate the total and print the receipt
    if cart_total > 0:
        discount = 0  # Initialize discount variable
        # Determine the discount based on the total quantity
        if 10 <= cart_quantity < 20:
            discount = 0.10
        elif 20 <= cart_quantity < 30:
            discount = 0.20
        elif cart_quantity >= 30:
            discount = 0.30

        gst = cart_total * 0.15  # Calculate GST (15% of the cart total)
        discount_amount = cart_total * discount  # Calculate the discount amount
        total = cart_total - discount_amount  # Calculate the final total after discount

        # Print the purchase receipt
        print("\n==========================================================")
        print("\t\tPurchase Receipt")
        print("==========================================================")
        for item in cart:
            print(f" {item['type']}\t  X {item['quantity']}\t\t\t{item['price'] * item['quantity']:.2f}")

        print("__________________________________________________________")
        print(f" Subtotal\t\t\t\t\t{cart_total:.2f}")
        print(f" GST inclusive 15%\t\t\t{gst:.2f}")
        print(f" Discount {discount * 100:.0f}%\t\t\t\t-{discount_amount:.2f}")
        print("__________________________________________________________")
        print(f" TOTAL\t\t\t\t\t\t{total:.2f}")
        print("__________________________________________________________\n")
        
    
#not required, I added this function as i think it will best fit in the stock management scenario    
def stocklist():
    print("__________________________________________________________________________")
    print("{0}\t\t{1}\t\t{2}\t\t{3}\t{4}".format("CODE", "TYPE", "PRICE", "MATERIAL", "QUANTITY"))
    print("__________________________________________________________________________")
    for code, product in products.items():
        print("{0}\t\t{1}\t{2}\t\t{3}\t\t{4}".format(code, product["type"], "{:.2f}".format(product["price"]), product["material"], product["quantity"]))
        print()
    print("__________________________________________________________________________")

    
#function for the menu, (NOT REQUIRED) but i made it separate form the main_program function 
def menu_option():
    
    print("==========================================================")
    print("\t\tBELLE ONLINE JEWELLERY SHOP")
    print("\t\t    by Danica Montano")
    print("==========================================================")
    print("\tPlease select the following options:")
    print("\t1.Add Product")
    print("\t2.Search Product")
    print("\t3.Update Product")
    print("\t4.Buy Product")
    print("\t5.Exit")
    print("==========================================================")
    
    
#Main Program
while True:
    menu_option()
    #will handle value exception
    try:
        option = int(input("Which option would you like to do? (1-5): "))
    except ValueError:
        print("Invalid input! Please enter a number between 1 and 5.")
        continue
        
    if option==1:
        while True:
            code= int(input("Enter Jewellery Code:      "))
            if code in products:
                print("invalid, it is a pre-existing code, Please enter new code")
            else:
                add_product(code)
                print()
                break
    elif option==2:
        search_product(check_product())
    elif option==3:
        update_product(check_product())
    elif option==4:
        buy_product()
    elif option==5:
        print("Goodbye!")
        break
    #only allows user to enter numbers 1-5 otherwise system will show invalid input
    else:
        print("Invalid input! Please enter a number between 1 and 5.")
        
    